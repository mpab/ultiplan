#!/bin/sh

typescript='import errorExit from "./utils/error-exit";
import { getAndCheckDbHandle } from "./db/db-util";
 
const index = async () => {
  const args = require(`minimist`)(process.argv.slice(2));
  let cmd = args._[0] || `help`;
 
  if (args.version || args.v) {
    cmd = `version`;
  }
 
  if (args.help || args.h) {
    cmd = "help";
  }

  const [handle, info] = getAndCheckDbHandle();
  const ignoreInvalidHandle = cmd === `init` || cmd === `help` || cmd === `version`;
  if (!handle && !ignoreInvalidHandle) errorExit(info);
 
  // generated command handlers
  switch (cmd) {'

echo "$typescript"

for filepath in ./services/src/commands/*; do
  filename_with_ext=$(basename -- "$filepath")
  filename="${filename_with_ext%.*}"
  echo "    case \"$filename\":"
  echo "      await require(\"./commands/$filename\")(handle);"
  echo '      break;'
  echo
  done

typescript='    default:
      errorExit(`"${cmd}" is not a valid command`);
      break;
  }
};
 
export default index();'

echo "$typescript"
