#!/bin/sh

typescript='import errorExit from "./utils/error-exit";
import { safeGetDbHandle } from "./utils/db-handle";
 
const index = async () => {
  const args = require(`minimist`)(process.argv.slice(2));
  let cmd = args._[0] || `help`;
 
  if (args.version || args.v) {
    cmd = `version`;
  }
 
  if (args.help || args.h) {
    cmd = "help";
  }

  const [handle, project, errors] = safeGetDbHandle(process.cwd());
  const ignoreInvalidHandle = cmd === `init` || cmd === `help` || cmd === `version` || cmd === `create-samples`;
  if (!handle.length && !ignoreInvalidHandle) errorExit(errors);
 
  // generated command handlers
  switch (cmd) {'

echo "$typescript"

for filepath in ./cli/src/commands/*; do

  if [ -d $filepath ]; then
    continue
  fi

  filename_with_ext=$(basename -- "$filepath")
  filename="${filename_with_ext%.*}"
  echo "    case \"$filename\":"
  echo "      await require(\"./commands/$filename\")(handle, project);"
  echo '      break;'
  echo
  done

typescript='    default:
      errorExit(`"${cmd}" is not a valid command`);
      break;
  }
};
 
export default index();'

echo "$typescript"
