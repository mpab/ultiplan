#!/bin/sh

typescript='import errorExit from "./utils/error-exit";
import { dbValidate } from "./db/db-util";
const minimist = require(`minimist`);
 
const index = () => {
  const args = minimist(process.argv.slice(2));

  let cmd = args._[0] || `help`;
 
  if (args.version || args.v) {
    cmd = `version`;
  }
 
  if (args.help || args.h) {
    cmd = "help";
  }

  const err = dbValidate();
  if (err) {
    if (cmd !== "dbinit") {
      if (cmd !== "help") {
        errorExit(err);
      } 
      console.warn("WARN: " + err);
    }
  }
 
  // generated command handlers
  switch (cmd) {'

echo "$typescript"

for filepath in ./src/commands/*; do
  filename_with_ext=$(basename -- "$filepath")
  filename="${filename_with_ext%.*}"
  echo "    case \"$filename\":"
  echo "      require(\"./commands/$filename\")(args);"
  echo '      break;'
  echo
  done

typescript='    default:
      errorExit(`"${cmd}" is not a valid command`);
      break;
  }
};
 
export default index();'

echo "$typescript"

